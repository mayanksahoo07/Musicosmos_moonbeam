{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "approved",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fundsTransferredToSeller",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fundsTransferredToArtist",
						"type": "uint256"
					}
				],
				"name": "FundsTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "fundsTransferredToArtist",
						"type": "uint256"
					}
				],
				"name": "FundsTransferredToArtist",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "songName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "artistName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "createTime",
						"type": "uint256"
					}
				],
				"name": "SongCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "songName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "artistName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address payable",
						"name": "artistAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address payable",
						"name": "currentOwnerAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "onSale",
						"type": "bool"
					}
				],
				"name": "SongPurchased",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "songName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "artistName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address payable",
						"name": "artistAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address payable",
						"name": "currentOwnerAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "onSale",
						"type": "bool"
					}
				],
				"name": "SongUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_songName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_artistName",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_imgHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_songHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_descHash",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_lyricsHash",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "_onSale",
						"type": "bool"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "spotify",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "appleMusic",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "amazonMusic",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "youtubeMusic",
								"type": "string"
							}
						],
						"internalType": "struct Musicosmos.Link",
						"name": "_links",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "genre",
								"type": "string"
							},
							{
								"internalType": "string[]",
								"name": "instruments",
								"type": "string[]"
							},
							{
								"internalType": "string",
								"name": "typeOfLyrics",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "songType",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "frequency",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "instrumentType",
								"type": "string"
							},
							{
								"internalType": "bool",
								"name": "sampleBased",
								"type": "bool"
							}
						],
						"internalType": "struct Musicosmos.Characteristic",
						"name": "_characteristics",
						"type": "tuple"
					}
				],
				"name": "createSong",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fetchAllNFTs",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "songName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "artistName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "createTime",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "imgHash",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "songHash",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "descHash",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "lyricsHash",
										"type": "string"
									}
								],
								"internalType": "struct Musicosmos.Hashes",
								"name": "hashes",
								"type": "tuple"
							},
							{
								"internalType": "address payable",
								"name": "artistAddress",
								"type": "address"
							},
							{
								"internalType": "address payable",
								"name": "currentOwnerAddress",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "onSale",
								"type": "bool"
							},
							{
								"components": [
									{
										"internalType": "address[]",
										"name": "previousOwners",
										"type": "address[]"
									},
									{
										"internalType": "uint256[]",
										"name": "previousPrices",
										"type": "uint256[]"
									},
									{
										"internalType": "uint256[]",
										"name": "previousSaleTimes",
										"type": "uint256[]"
									}
								],
								"internalType": "struct Musicosmos.Sales",
								"name": "sales",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "spotify",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "appleMusic",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "amazonMusic",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "youtubeMusic",
										"type": "string"
									}
								],
								"internalType": "struct Musicosmos.Link",
								"name": "links",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "genre",
										"type": "string"
									},
									{
										"internalType": "string[]",
										"name": "instruments",
										"type": "string[]"
									},
									{
										"internalType": "string",
										"name": "typeOfLyrics",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "songType",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "frequency",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "instrumentType",
										"type": "string"
									},
									{
										"internalType": "bool",
										"name": "sampleBased",
										"type": "bool"
									}
								],
								"internalType": "struct Musicosmos.Characteristic",
								"name": "characteristics",
								"type": "tuple"
							}
						],
						"internalType": "struct Musicosmos.Song[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fetchMyNFTs",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "songName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "artistName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "createTime",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "imgHash",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "songHash",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "descHash",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "lyricsHash",
										"type": "string"
									}
								],
								"internalType": "struct Musicosmos.Hashes",
								"name": "hashes",
								"type": "tuple"
							},
							{
								"internalType": "address payable",
								"name": "artistAddress",
								"type": "address"
							},
							{
								"internalType": "address payable",
								"name": "currentOwnerAddress",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "onSale",
								"type": "bool"
							},
							{
								"components": [
									{
										"internalType": "address[]",
										"name": "previousOwners",
										"type": "address[]"
									},
									{
										"internalType": "uint256[]",
										"name": "previousPrices",
										"type": "uint256[]"
									},
									{
										"internalType": "uint256[]",
										"name": "previousSaleTimes",
										"type": "uint256[]"
									}
								],
								"internalType": "struct Musicosmos.Sales",
								"name": "sales",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "spotify",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "appleMusic",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "amazonMusic",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "youtubeMusic",
										"type": "string"
									}
								],
								"internalType": "struct Musicosmos.Link",
								"name": "links",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "genre",
										"type": "string"
									},
									{
										"internalType": "string[]",
										"name": "instruments",
										"type": "string[]"
									},
									{
										"internalType": "string",
										"name": "typeOfLyrics",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "songType",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "frequency",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "instrumentType",
										"type": "string"
									},
									{
										"internalType": "bool",
										"name": "sampleBased",
										"type": "bool"
									}
								],
								"internalType": "struct Musicosmos.Characteristic",
								"name": "characteristics",
								"type": "tuple"
							}
						],
						"internalType": "struct Musicosmos.Song[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "fetchNFTsCreated",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "songName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "artistName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "createTime",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "imgHash",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "songHash",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "descHash",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "lyricsHash",
										"type": "string"
									}
								],
								"internalType": "struct Musicosmos.Hashes",
								"name": "hashes",
								"type": "tuple"
							},
							{
								"internalType": "address payable",
								"name": "artistAddress",
								"type": "address"
							},
							{
								"internalType": "address payable",
								"name": "currentOwnerAddress",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "onSale",
								"type": "bool"
							},
							{
								"components": [
									{
										"internalType": "address[]",
										"name": "previousOwners",
										"type": "address[]"
									},
									{
										"internalType": "uint256[]",
										"name": "previousPrices",
										"type": "uint256[]"
									},
									{
										"internalType": "uint256[]",
										"name": "previousSaleTimes",
										"type": "uint256[]"
									}
								],
								"internalType": "struct Musicosmos.Sales",
								"name": "sales",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "spotify",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "appleMusic",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "amazonMusic",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "youtubeMusic",
										"type": "string"
									}
								],
								"internalType": "struct Musicosmos.Link",
								"name": "links",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "genre",
										"type": "string"
									},
									{
										"internalType": "string[]",
										"name": "instruments",
										"type": "string[]"
									},
									{
										"internalType": "string",
										"name": "typeOfLyrics",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "songType",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "frequency",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "instrumentType",
										"type": "string"
									},
									{
										"internalType": "bool",
										"name": "sampleBased",
										"type": "bool"
									}
								],
								"internalType": "struct Musicosmos.Characteristic",
								"name": "characteristics",
								"type": "tuple"
							}
						],
						"internalType": "struct Musicosmos.Song[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getApproved",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "ownerOf",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "purchaseSong",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "songsCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					}
				],
				"name": "toggleOnSale",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "tokenURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_newPrice",
						"type": "uint256"
					}
				],
				"name": "updatePrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"approve(address,uint256)": {
					"details": "See {IERC721-approve}."
				},
				"balanceOf(address)": {
					"details": "See {IERC721-balanceOf}."
				},
				"getApproved(uint256)": {
					"details": "See {IERC721-getApproved}."
				},
				"isApprovedForAll(address,address)": {
					"details": "See {IERC721-isApprovedForAll}."
				},
				"name()": {
					"details": "See {IERC721Metadata-name}."
				},
				"ownerOf(uint256)": {
					"details": "See {IERC721-ownerOf}."
				},
				"safeTransferFrom(address,address,uint256)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"safeTransferFrom(address,address,uint256,bytes)": {
					"details": "See {IERC721-safeTransferFrom}."
				},
				"setApprovalForAll(address,bool)": {
					"details": "See {IERC721-setApprovalForAll}."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"symbol()": {
					"details": "See {IERC721Metadata-symbol}."
				},
				"tokenURI(uint256)": {
					"details": "See {IERC721Metadata-tokenURI}."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC721-transferFrom}."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Musicosmos.sol": "Musicosmos"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 50
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
			"keccak256": "0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e",
			"license": "MIT",
			"urls": [
				"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea",
				"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
			"license": "MIT",
			"urls": [
				"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
				"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
				"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
			]
		},
		"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
				"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
			"license": "MIT",
			"urls": [
				"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
				"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
				"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeMath.sol": {
			"keccak256": "0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e",
			"license": "MIT",
			"urls": [
				"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65",
				"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"
			]
		},
		"contracts/Musicosmos.sol": {
			"keccak256": "0xe0a10fe3a9993f2e9873e05910c928acc1f4c1ca526ee6e99a31c9d22852908b",
			"license": "MIT",
			"urls": [
				"bzz-raw://29b9ed94d4cc0ee911f71acf52faa082efd509199e47e43c1307f2cf373945df",
				"dweb:/ipfs/QmTWp34bfULWZe5VfjQGmRWAQTsWJPzWpAiZFpKhN9YCEy"
			]
		}
	},
	"version": 1
}